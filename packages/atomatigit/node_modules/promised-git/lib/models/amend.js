(function() {
  var Actor, Amend, Diff, Treeish, _;

  _ = require('../lodash');

  Actor = require('./actor');

  Diff = require('./diff');

  Treeish = require('./treeish');

  Amend = (function() {
    Amend.prototype.alive = true;

    Amend.prototype.destroyed = false;

    function Amend(origMessage, repo) {
      var _ref, _ref1;
      this.origMessage = origMessage != null ? origMessage : '';
      this.repo = repo;
      if (_.isPromisedGit(origMessage)) {
        _ref = ['', origMessage], this.origMessage = _ref[0], this.repo = _ref[1];
      } else if (!_.isPromisedGit(repo)) {
        throw new Error('Invalid repository object');
      }
      this.origMessage = "" + ((_ref1 = this.origMessage) != null ? _ref1.trim() : void 0) + "\n";
      this.repo.reset('HEAD^', {
        soft: true
      });
    }

    Amend.prototype.abort = function() {
      return this.repo.reset('ORIG_HEAD').then((function(_this) {
        return function(stdout) {
          _this.destroy();
          return stdout;
        };
      })(this));
    };

    Amend.prototype.commit = function(message) {
      if (!_.isString(message)) {
        message = this.origMessage;
      }
      return this.repo.commit(message).then(function(stdout) {
        return stdout;
      });
    };

    Amend.prototype.getAmendMessage = function() {
      return this.origMessage;
    };

    return Amend;

  })();

  module.exports = Amend;

}).call(this);
