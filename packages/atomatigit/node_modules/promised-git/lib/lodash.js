(function() {
  var LodashExtended;

  LodashExtended = (function() {
    function LodashExtended() {}

    LodashExtended.extend = function() {
      var extension;
      if (this.lodash != null) {
        return this.lodash;
      }
      extension = {
        'isActor': this.prototype.isActor,
        'isAmend': this.prototype.isAmend,
        'isCommit': this.prototype.isCommit,
        'isDiff': this.prototype.isDiff,
        'isFile': this.prototype.isFile,
        'isStatus': this.prototype.isStatus,
        'isTag': this.prototype.isTag,
        'isTreeish': this.prototype.isTreeish,
        'isPromisedGit': this.prototype.isPromisedGit
      };
      this.lodash = require('lodash');
      this.lodash.mixin(extension, {
        'chain': false
      });
      return this.lodash;
    };

    LodashExtended.prototype.isActor = function(obj) {
      var Actor;
      Actor = require('./models/actor');
      return obj instanceof Actor;
    };

    LodashExtended.prototype.isAmend = function(obj) {
      var Amend;
      Amend = require('./models/amend');
      return obj instanceof Amend;
    };

    LodashExtended.prototype.isCommit = function(obj) {
      var Commit;
      Commit = require('./models/commit');
      return obj instanceof Commit;
    };

    LodashExtended.prototype.isDiff = function(obj) {
      var Diff;
      Diff = require('./models/diff');
      return obj instanceof Diff;
    };

    LodashExtended.prototype.isFile = function(obj) {
      var File;
      File = require('./models/file');
      return obj instanceof File;
    };

    LodashExtended.prototype.isStatus = function(obj) {
      var Status;
      Status = require('./models/status');
      return obj instanceof Status;
    };

    LodashExtended.prototype.isTag = function(obj) {
      var Tag;
      Tag = require('./models/tag');
      return obj instanceof Tag;
    };

    LodashExtended.prototype.isTreeish = function(obj) {
      var Treeish;
      Treeish = require('./models/treeish');
      return obj instanceof Treeish;
    };

    LodashExtended.prototype.isPromisedGit = function(obj) {
      var PromisedGit;
      PromisedGit = require('./promised-git');
      return obj instanceof PromisedGit;
    };

    return LodashExtended;

  })();

  module.exports = LodashExtended.extend();

}).call(this);
